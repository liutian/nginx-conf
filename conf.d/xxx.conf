server {
  listen 192.168.16.7:443 ssl;
  # 默认服务器???
  #listen 80 default_server; 
  server_name .xxx.com;

  ssl_certificate  /etc/nginx/ssl/xxx.com.crt;
  ssl_certificate_key  /etc/nginx/ssl/xxx.com.key;
  ssl_session_timeout 1d;
  ssl_session_cache shared:SSL:50m;
  ssl_session_tickets off;

  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';
  ssl_prefer_server_ciphers on;
  # 让浏览器主动把该站点的所有请求改为https协议
  add_header Strict-Transport-Security max-age=15768000;
  ssl_stapling on;
  ssl_stapling_verify on;

  # 防盗链
  valid_referers none blocked server_names;

  # 根据客户端类型跳转到不同的页面
  if ( $http_user_agent ~ "^((.*MIDP.*)|(.*WAP.*)|(.*UP.Browser.*)|(.*Smartphone.*)|(.*Obigo.*)|(.*Mobile.*)|(.*AU.Browser.*)|(.*wxd.Mms.*)|(.*WxdB.Browser.*)|(.*CLDC.*)|(.*UP.Link.*)|(.*KM.Browser.*)|(.*UCWEB.*)|(.*SEMC\-Browser.*)|(.*Mini.*)|(.*Symbian.*)|(.*Palm.*)|(.*Nokia.*)|(.*Panasonic.*)|(.*MOT\-.*)|(.*SonyEricsson.*)|(.*NEC\-.*)|(.*Alcatel.*)|(.*Ericsson.*)|(.*BENQ.*)|(.*BenQ.*)|(.*Amoisonic.*)|(.*Amoi\-.*)|(.*Capitel.*)|(.*PHILIPS.*)|(.*SAMSUNG.*)|(.*Lenovo.*)|(.*Mitsu.*)|(.*Motorola.*)|(.*SHARP.*)|(.*WAPPER.*)|(.*LG\-.*)|(.*LG/.*)|(.*EG900.*)|(.*CECT.*)|(.*Compal.*)|(.*kejian.*)|(.*Bird.*)|(.*BIRD.*)|(.*G900/V1.0.*)|(.*Arima.*)|(.*CTL.*)|(.*TDG.*)|(.*Daxian.*)|(.*DAXIAN.*)|(.*DBTEL.*)|(.*Eastcom.*)|(.*EASTCOM.*)|(.*PANTECH.*)|(.*Dopod.*)|(.*Haier.*)|(.*HAIER.*)|(.*KONKA.*)|(.*KEJIAN.*)|(.*LENOVO.*)|(.*Soutec.*)|(.*SOUTEC.*)|(.*SAGEM.*)|(.*SEC\-.*)|(.*SED\-.*)|(.*EMOL\-.*)|(.*INNO55.*)|(.*ZTE.*)|(.*iPhone.*)|(.*Android.*)|(.*Windows CE.*)|(java.*)|(Opera.*))$" ) {
    rewrite ^/website.html /appsite.html permanent;
  }

  # 当后端是http而nginx代理出去是https时,解决客户端收到请求Location refresh 字段协议总是http的问题
  # 如果proxy_pass配置项中包含变量则proxy_redirect default;无法生效
  #proxy_redirect ~^(http|https)(.+)$ $scheme$2;
  # 当发请求到后端时修改请求的ip地址，transparent表示ip地址不是本地服务器的地址
  #proxy_bind $remote_addr transparent;
  # 重写客户端请求头中的字段，然后发送到后端
  #proxy_set_header Host $host;
  # 将后端服务器返回的响应信息保存到临时文件中
  #proxy_temp_path    /data/temp;
  # 根据信息判断是否需要缓存代理响应
  #proxy_no_cache $cookie_nocache $arg_nocache$arg_comment;
  # 根据信息判断是否将缓存数据返回给客户端
  #proxy_cache_bypass $cookie_nocache $arg_nocache$arg_comment;
  # 禁止将后端服务中的某些响应头返回给客户端
  #proxy_hide_header xxx;
  # 替换后端服务中cookie_path信息
  #proxy_cookie_path /api /;
  # 替换后端服务中cookie_domain信息
  #proxy_cookie_domain localhost example.org;

  include /etc/nginx/conf.d/xxx.core;
}


# 禁止ip直接访问
server {
  listen       80  default_server; # default_server 参数很重要不能忽略
  server_name  _;
  return       444;
}

 # 域名迁移
server {
  listen 80;
  server_name xxx-old.com;
  rewrite . http://xxx-new permanent;
}

# 域名迁移 (复杂情况通过js跳转)
server {
  listen 80;
  server_name xxx-old.com;
  add_header Content-Type "text/html; charset=utf-8";
  return 200 "<script>location.href = location.protocol + '//' + location.host.match(/^(.*)\.xxx-old\.com/)[1] + '.xxx.com' + location.pathname + location.search + location.hash;</script>";
}

# 强制http转https
server {
  listen 80;
  server_name *.xxx.com;
  # 让浏览器主动对该站点启用https
  add_header Strict-Transport-Security max-age=15768000;
  # 不要用rewrite性能比较差
  return 301 https://$host$request_uri;
}

# 通过反向代理缓存第三方网站
http {
  proxy_cache_path /data/site/files keys_zone=cache:100m inactive=1d max_size=1g;
  proxy_cache_key "$host$request_uri$cookie_user";# 默认值key为请求url
  proxy_cache_min_uses 5;# 被访问5次才缓存
  proxy_cache_methods GET HEAD POST;
  proxy_cache_valid 200 302 10m; //响应状态码为200 302时，缓存10分钟其他不缓存
  proxy_cache_bypass $cookie_nocache $arg_nocache$arg_comment;#符合条件的不缓存
  #proxy_cache_purge ??? 清除缓存

  server{
    proxy_cache cache;

    location / {
      proxy_pass http://site;
      # 让客户端缓存信息，对分片信息不缓存
      if ( $http_range = ''){  
        expires 30d;  
      }  
    }
  }
}

